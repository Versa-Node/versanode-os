name: VersaNode OS Build & Release (pi-gen)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Git ref to build (branch or tag)"
        default: "main"
        required: true
      release:
        description: "Publish GitHub Release?"
        type: boolean
        default: true
      upload_artifacts:
        description: "Upload build artifacts?"
        type: boolean
        default: true

concurrency:
  group: versanode-os-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 🧹 Free up disk space
        uses: jlumbroso/free-disk-space@v1.3.1
        with:
          tool-cache: true
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: 🧽 Extra prune & show free space
        run: |
          docker system prune -af || true
          sudo rm -rf /usr/local/lib/android /opt/ghc /usr/share/dotnet /opt/hostedtoolcache || true
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*
          df -h

      - name: 📦 Checkout repo with submodules
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          submodules: recursive
          fetch-depth: 0

      - name: ⚙️ Install pi-gen host dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            coreutils quilt parted qemu-user-static debootstrap zerofree zip dosfstools e2fsprogs \
            libarchive-tools libcap2-bin grep rsync xz-utils file git curl bc gpg pigz xxd bmap-tools \
            kpartx kmod arch-test ca-certificates

      - name: 🔍 Verify submodules and config presence
        run: |
          set -euo pipefail
          [ -d pi-gen ] || { echo "::error::pi-gen missing"; exit 2; }
          [ -d versanode-os-kmods ] || { echo "::error::versanode-os-kmods missing"; exit 3; }
          [ -d versanode-os-usermods ] || { echo "::error::versanode-os-usermods missing"; exit 4; }
          [ -f config ] || { echo "::error::Missing root config file!"; exit 5; }
          [ -f scripts/build.sh ] || { echo "::error::Missing scripts/build.sh"; exit 6; }

          echo "✅ Repository layout verified."
          echo "---- config preview ----"
          sed -n '1,40p' config

      - name: 🧩 Inject custom stages
        run: |
          set -euo pipefail
          rm -rf pi-gen/stage8 pi-gen/stage9
          cp -a versanode-os-kmods    pi-gen/stage8
          cp -a versanode-os-usermods pi-gen/stage9
          echo "✅ Injected custom stages."

      - name: 📝 Write config for pi-gen
        run: |
          cat <<EOF > config
          ARCH=arm64
          RELEASE=trixie
          IMG_NAME=versanode-os
          ENABLE_SSH=1
          PUBKEY_ONLY_SSH=0
          FIRST_USER_NAME=versanode
          FIRST_USER_PASS=versanode
          TARGET_HOSTNAME=versanode
          DISABLE_FIRST_BOOT_USER_RENAME=1
          DEBIAN_FRONTEND=noninteractive
          DEPLOY_COMPRESSION=xz
          COMPRESSION_LEVEL=6
          USE_QEMU=1
          DEPLOY_MINIMIZEFS=0
          ROOT_MARGIN=256
          STAGE_LIST="stage0 stage1 stage2 stage8 stage9"
          TARGET_IMAGE_SIZE=4096
          EOF

      - name: 🔧 Make scripts executable
        run: chmod +x ./scripts/build.sh || true

      - name: 🏗️ Run full build script
        run: |
          ./scripts/build.sh

      - name: 📂 Collect build artifacts
        run: |
          mkdir -p artifacts
          cp -v pi-gen/deploy/*.{img,img.xz,bmap,sha256,zip} artifacts/ 2>/dev/null || true
          ls -lh artifacts || true

      - name: ⬆️ Upload artifacts
        if: ${{ inputs.upload_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: versanode-os-build-${{ github.run_number }}
          path: artifacts/*

      - name: 🚀 Create GitHub Release
        if: ${{ inputs.release }}
        uses: softprops/action-gh-release@v2
        with:
          name: "VersaNode OS build ${{ github.run_number }}"
          tag_name: "build-${{ github.run_number }}"
          files: artifacts/*
          body: |
            Automated build of **VersaNode OS**
            - Ref: ${{ inputs.ref }}
            - Run ID: ${{ github.run_id }}
